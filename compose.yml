version: '3'
services:
    #### Independed services ####
    blob:
        build:
            context: blob
        restart: 'always'
        ports:
            - '32000:8000'
        networks:
            - bsm
    #############################

    postgres:
        image: postgres
        ports:
            - '30000:5432'
        networks:
            - bsm
        volumes:
            - ./backup/postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'postgres']
            interval: 5s
            timeout: 5s
            retries: 10

    migrator:
        build:
            context: .
            dockerfile: database/dockerfile
        restart: 'no'
        command: aerich upgrade
        environment:
            BSM_SERVER_DB_HOST: postgres
            BSM_SERVER_DB_PORT: 5432
            BSM_SERVER_DB_USER: postgres
            BSM_SERVER_DB_PASS: postgres
            BSM_SERVER_DB_BASE: postgres
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - bsm

    server:
        build:
            context: .
            dockerfile: server/dockerfile
        depends_on:
            - postgres
            - migrator
        ports:
            - '31000:8000'
        environment:
            BSM_SERVER_DB_HOST: postgres
            BSM_SERVER_DB_PORT: 5432
            BSM_SERVER_DB_USER: postgres
            BSM_SERVER_DB_PASS: postgres
            BSM_SERVER_DB_BASE: postgres
            SERVER_SCHEME: http://
            SERVER_HOST: localhost
            SERVER_PORT: 8000
            TELEGRAM_BOT_TOKEN: 6728691331:AAFbhSQ6Zt1FUO5nrq1tzJdE4rAygUUJIcw
            TELEGRAM_CHATID: 1002082538383
        networks:
            - bsm

    deepface:
        build:
            context: .
            dockerfile: face/dockerfile
        restart: 'always'
        volumes:
            - ./face:/app/face
        environment:
            SERVER_SCHEME: http://
            SERVER_HOST: server
            SERVER_PORT: 8000
            BLOB_HOST: blob
            BLOB_PORT: 8000
        networks:
            - bsm

networks:
    bsm:
        driver: bridge
